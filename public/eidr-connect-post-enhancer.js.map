{"version":3,"sources":["webpack:///../public/eidr-connect-post-enhancer.js","webpack:///webpack/bootstrap 81f00f6d2568d0dd1864","webpack:///./app.js","webpack:///./~/d3/d3.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./EventDrops/lib/config.js","webpack:///./EventDrops/lib/drawer/axes.js","webpack:///./EventDrops/lib/drawer/delimiters.js","webpack:///./EventDrops/lib/drawer/drops.js","webpack:///./EventDrops/lib/drawer/index.js","webpack:///./EventDrops/lib/drawer/labels.js","webpack:///./EventDrops/lib/drawer/lineSeparator.js","webpack:///./EventDrops/lib/eventDrops.js","webpack:///./EventDrops/lib/filterData.js","webpack:///./EventDrops/lib/metaballs.js","webpack:///./EventDrops/lib/xAxis.js","webpack:///./EventDrops/lib/zoom.js","webpack:///./~/configurable.js/configurable.js","webpack:///./EventDrops/style.css","webpack:///./styles.css","webpack:///./EventDrops/style.css?fab6","webpack:///./styles.css?6b48"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","EIDR_CONNECT_URL","FONT_SIZE","TOOLTIP_WIDTH","showTooltip","article","d3","select","selectAll","remove","tooltip","append","attr","style","transition","duration","each","this","rightOrLeftLimit","direction","event","pageX","ARROW_MARGIN","ARROW_WIDTH","left","html","url","Date","publishDate","toLocaleString","classed","top","pageY","hideTooltip","pointAdd","point0","_len","arguments","length","points","Array","_key","map","el","idx","reduce","sofar","el2","pointScale","s","enhancing","window","obs","disconnect","enhance","target","document","querySelector","printLink","postIdMatch","onclick","toString","match","postId","__debugPostId","eidrConnectUrl","__debugEidrConnectUrl","$","getJSON","events","enhancementHTML","_id","eventName","join","$seeAlso","find","before","minPubDate","forEach","articles","chart","eventDrops","start","getTime","end","now","margin","bottom","right","labelsWidth","eventColor","d","i","date","a","click","evt","matches","closest","element","datum","name","data","filter","zoom","zoomBy","factor","center","width","center0","translate0","translate","coordinates0","scale","center1","setTimeout","MutationObserver","observe","body","childList","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_ascending","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_rebind","source","method","apply","d3_vendorSymbol","object","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","set","d3_eventPreventDefault","preventDefault","d3_eventSource","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","node","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","ownerDocument","createElementNS","namespaceURI","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","onAdd","wrap","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","w","d3_window","d3_event_dragSelect","d3_documentElement","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","position","padding","border","ctm","getScreenCTM","f","y","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_behavior_dragTouchSubject","d3_behavior_dragMouseSubject","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","min","format","hsl","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_identity","d3_xhrType","response","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","toLowerCase","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","meridian","parallel","meridianNormal","polarAngle","winding","reset","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","namespace","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","ease","timer","elapsed","tweened","tick","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","createContextualFragment","version","d3_arraySlice","list","documentElement","childNodes","nodeType","createElement","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","d3_selectionRoot","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","contains","getComputedStyle","getPropertyValue","text","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","view1","d3_transitionInheritId","deltaY","deltaMode","wheelDelta","detail","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","item","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","createStyleElement","styleElement","head","getHeadElement","createLinkElement","linkElement","rel","obj","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","firstChild","unescape","encodeURIComponent","blob","oldSrc","memoize","fn","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean","_interopRequireDefault","__esModule","_d","_d2","config","lineHeight","minScale","maxScale","labelsRightMargin","axisFormat","mouseout","mouseover","zoomend","hasDelimiter","hasTopAxis","hasBottomAxis","eventLineColor","metaballs","zoomable","dateFormat","_xAxis","_xAxis2","boolOrReturnValue","axesContainer","scales","configuration","dimensions","orientation","height","delimiters","extremum","dropLines","drop","drops","_delimiters","_metaballs","_axes","_axes2","_drops","_drops2","_labels","_labels2","_lineSeparator","_lineSeparator2","defs","labelsContainer","chartContainer","class","dropsContainer","lineSeparator","axes","labels","_filterData","_filterData2","separators","eventDropGraph","clientWidth","finalConfiguration","xScale","yScale","draw","_drawer2","_zoom2","timeBounds","_configurable2","_extends","assign","_configurable","_config","_config2","_drawer","_zoom","filterData","_scale$domain","_scale$domain2","_slicedToArray","sliceIterator","arr","_arr","_n","_e","_s","_i","Symbol","iterator","done","TypeError","filters","where","tickFormatData","requestAnimationFrame","configurable","targetFunction","configure","content","locals"],"mappings":"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","file":"../public/eidr-connect-post-enhancer.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\t__webpack_require__(11);\n\t\n\t__webpack_require__(19);\n\t\n\t__webpack_require__(20);\n\t\n\tvar EIDR_CONNECT_URL = \"https://eidr-connect.eha.io\";\n\t\n\tvar FONT_SIZE = 16; // in pixels\n\tvar TOOLTIP_WIDTH = 30; // in rem\n\tvar showTooltip = function showTooltip(article) {\n\t  d3.select('body').selectAll('.tooltip').remove();\n\t\n\t  var tooltip = d3.select('body').append('div').attr('class', 'tooltip').style('opacity', 0); // hide it by default\n\t\n\t  // show the tooltip with a small animation\n\t  tooltip.transition().duration(200).each('start', function start() {\n\t    d3.select(this).style('block');\n\t  }).style('opacity', 1);\n\t\n\t  var rightOrLeftLimit = FONT_SIZE * TOOLTIP_WIDTH;\n\t  var direction = d3.event.pageX > rightOrLeftLimit ? 'right' : 'left';\n\t\n\t  var ARROW_MARGIN = 1.65;\n\t  var ARROW_WIDTH = FONT_SIZE;\n\t  var left = direction === 'right' ? d3.event.pageX - rightOrLeftLimit : d3.event.pageX - ARROW_MARGIN * FONT_SIZE - ARROW_WIDTH / 2;\n\t\n\t  tooltip.html('\\n    <div class=\"marker\">\\n      <div class=\"content\">\\n        <p>\\n          <a href=\"' + article.url + '\" class=\"author\">' + article.url + '</a>\\n        </p>\\n        <p>\\n          Published on <span class=\"date\">' + new Date(article.publishDate).toLocaleString() + '</span>\\n        </p>\\n      </div>\\n    </div>\\n  ').classed(direction, true).style({\n\t    left: left + 'px',\n\t    top: d3.event.pageY + 16 + 'px'\n\t  });\n\t};\n\t\n\tvar hideTooltip = function hideTooltip() {\n\t  d3.select('.tooltip').transition().duration(200).each('end', function end() {\n\t    this.remove();\n\t  }).style('opacity', 0);\n\t};\n\t\n\tvar pointAdd = function pointAdd(point0) {\n\t  for (var _len = arguments.length, points = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    points[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  return point0.map(function (el, idx) {\n\t    return points.reduce(function (sofar, el2) {\n\t      return sofar + el2[idx];\n\t    }, el);\n\t  });\n\t};\n\tvar pointScale = function pointScale(p, s) {\n\t  return p.map(function (el, idx) {\n\t    return el * s;\n\t  });\n\t};\n\t\n\tvar enhancing = false;\n\tif (window.obs) window.obs.disconnect();\n\tvar enhance = function enhance() {\n\t  if (enhancing) return;\n\t  enhancing = true;\n\t  var target = document.querySelector(\"#preview\");\n\t  var printLink = document.querySelector(\".printable a\");\n\t  if (!printLink) return enhancing = false;\n\t  var postIdMatch = document.querySelector(\".printable a\").onclick.toString().match(/post\\/(\\d+)/);\n\t  if (!postIdMatch) return enhancing = false;\n\t  var postId = window.__debugPostId || postIdMatch[1];\n\t  var url = \"http://promedmail.org/post/\" + postId;\n\t  var eidrConnectUrl = window.__debugEidrConnectUrl || EIDR_CONNECT_URL;\n\t  $.getJSON(eidrConnectUrl + \"/api/events-with-source\", {\n\t    url: url\n\t  }, function (events) {\n\t    if (!events || events.length === 0) return enhancing = false;\n\t    var enhancementHTML = '\\n      <p>EIDR-Connect Events:&nbsp;\\n        ' + events.map(function (event) {\n\t      return '<a href=\"https://eidr-connect.eha.io/user-event/' + event._id + '\">\\n            ' + event.eventName + '\\n          </a>';\n\t    }).join(\", \") + '\\n      </p>\\n      <div id=\"plotContainer\">\\n        <button class=\"zoom-btn zoom-out\">-</button>\\n        <button class=\"zoom-btn zoom-in\">+</button>\\n        <p class=\"timeline-title\">Event timeline:</p>\\n        <div class=\"eidr-chart\"></div>\\n      </div>\\n    ';\n\t    var $seeAlso = $(target).find(\"h2\");\n\t    if ($seeAlso.length > 0) $seeAlso.before(enhancementHTML);else $(target).append(enhancementHTML);\n\t    var minPubDate = new Date();\n\t    events.forEach(function (event) {\n\t      event.articles.forEach(function (article) {\n\t        if (!article.publishDate) return;\n\t        var publishDate = new Date(article.publishDate);\n\t        if (publishDate < minPubDate) {\n\t          minPubDate = publishDate;\n\t        }\n\t      });\n\t    });\n\t    var chart = d3.chart.eventDrops()\n\t    //Start a day before the first date\n\t    .start(new Date(minPubDate.getTime() - 3600000 * 24)).end(new Date(Date.now() + 3600000 * 24)).margin({\n\t      top: 50, bottom: 0, left: 0, right: 0\n\t    }).labelsWidth(0).eventColor(function (d, i) {\n\t      return d.url === url ? '#ff0000' : '#0d73bb';\n\t    }).date(function (a) {\n\t      return new Date(a.publishDate);\n\t    }).click(showTooltip);\n\t\n\t    $(document).click(function (evt) {\n\t      if (evt.target.matches(\".drop\")) return;\n\t      if (!$(evt.target).closest('.tooltip').length) hideTooltip();\n\t    });\n\t\n\t    var element = d3.select('.eidr-chart').datum(events.map(function (event) {\n\t      return {\n\t        name: event.eventName,\n\t        data: event.articles.filter(function (a) {\n\t          return a.publishDate;\n\t        })\n\t      };\n\t    }));\n\t\n\t    chart(element);\n\t\n\t    var zoom = element[0][0].zoom;\n\t    $(\".zoom-in\").click(function () {\n\t      return zoomBy(1.5);\n\t    });\n\t    $(\".zoom-out\").click(function () {\n\t      return zoomBy(1 / 1.5);\n\t    });\n\t\n\t    var zoomBy = function zoomBy(factor) {\n\t      // Temporarily set zoom center\n\t      zoom.center([$(\".eidr-chart\").width() / 2, 0]);\n\t      // Based on http://bl.ocks.org/mbostock/7ec977c95910dd026812\n\t      element.call(zoom.event);\n\t      var center0 = zoom.center();\n\t      var translate0 = zoom.translate();\n\t      var coordinates0 = pointScale(pointAdd(center0, pointScale(zoom.translate(), -1)), 1 / zoom.scale());\n\t      zoom.scale(zoom.scale() * factor);\n\t      var center1 = pointAdd(zoom.translate(), pointScale(coordinates0, zoom.scale()));\n\t      zoom.translate(pointAdd(translate0, center0, pointScale(center1, -1)));\n\t      element.transition().duration(500).call(zoom.event);\n\t      zoom.center(null);\n\t    };\n\t    // A timeout is used for debouncing\n\t    setTimeout(function () {\n\t      enhancing = false;\n\t    }, 100);\n\t  });\n\t};\n\twindow.obs = new MutationObserver(enhance);\n\twindow.obs.observe(document.body, { childList: true });\n\tenhance();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.3\"\n\t  };\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n\t  try {\n\t    d3_array(d3_documentElement.childNodes)[0].nodeType;\n\t  } catch (e) {\n\t    d3_array = function(list) {\n\t      var i = list.length, array = new Array(i);\n\t      while (i--) array[i] = list[i];\n\t      return array;\n\t    };\n\t  }\n\t  try {\n\t    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n\t  } catch (error) {\n\t    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t    d3_element_prototype.setAttribute = function(name, value) {\n\t      d3_element_setAttribute.call(this, name, value + \"\");\n\t    };\n\t    d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t    };\n\t    d3_style_prototype.setProperty = function(name, value, priority) {\n\t      d3_style_setProperty.call(this, name, value + \"\", priority);\n\t    };\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n\t    return d3_selectMatcher.call(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3_selectionRoot;\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    } : function() {\n\t      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n\t    };\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n\t    group.parentNode = d3_documentElement;\n\t    return d3_selection([ group ]);\n\t  };\n\t  var d3_selectionRoot = d3.select(d3_documentElement);\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  d3_selection_onFilters.forEach(function(k) {\n\t    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t  });\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n\t  function d3_event_dragSuppress() {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n\t        svg = d3.select(\"body\").append(\"svg\").style({\n\t          position: \"absolute\",\n\t          top: 0,\n\t          left: 0,\n\t          margin: 0,\n\t          padding: 0,\n\t          border: \"none\"\n\t        }, \"important\");\n\t        var ctm = svg[0][0].getScreenCTM();\n\t        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t        svg.remove();\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  function d3_behavior_dragTouchSubject() {\n\t    return d3.event.target;\n\t  }\n\t  function d3_behavior_dragMouseSubject() {\n\t    return d3_window;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      });\n\t      center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress();\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n\t      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n\t  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t    return d3.event.wheelDelta;\n\t  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t    return -d3.event.detail;\n\t  }, \"MozMousePixelScroll\");\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - point[0], dy = y - point[1], distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n\t        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3_selectionRoot.transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0;\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction createStyleElement() {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tvar head = getHeadElement();\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\thead.appendChild(styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement() {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tvar head = getHeadElement();\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\thead.appendChild(linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement();\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement();\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar config = {\n\t    lineHeight: 40,\n\t    start: new Date(0),\n\t    end: new Date(),\n\t    minScale: 0,\n\t    maxScale: Infinity,\n\t    margin: {\n\t        top: 60,\n\t        left: 200,\n\t        bottom: 40,\n\t        right: 50\n\t    },\n\t    labelsWidth: 210,\n\t    labelsRightMargin: 10,\n\t    locale: null,\n\t    axisFormat: null,\n\t    tickFormat: [['.%L', function (d) {\n\t        return d.getMilliseconds();\n\t    }], [':%S', function (d) {\n\t        return d.getSeconds();\n\t    }], ['%I:%M', function (d) {\n\t        return d.getMinutes();\n\t    }], ['%I %p', function (d) {\n\t        return d.getHours();\n\t    }], ['%a %d', function (d) {\n\t        return d.getDay() && d.getDate() !== 1;\n\t    }], ['%b %d', function (d) {\n\t        return d.getDate() !== 1;\n\t    }], ['%B', function (d) {\n\t        return d.getMonth();\n\t    }], ['%Y', function () {\n\t        return true;\n\t    }]],\n\t    mouseout: function mouseout() {},\n\t    mouseover: function mouseover() {},\n\t    zoomend: function zoomend() {},\n\t    click: function click() {},\n\t    hasDelimiter: true,\n\t    date: function date(d) {\n\t        return d;\n\t    },\n\t    hasTopAxis: true,\n\t    hasBottomAxis: function hasBottomAxis(d) {\n\t        return d.length >= 10;\n\t    },\n\t    eventLineColor: 'black',\n\t    eventColor: null,\n\t    metaballs: true,\n\t    zoomable: true\n\t};\n\t\n\tconfig.dateFormat = config.locale ? config.locale.timeFormat('%d %B %Y') : _d2.default.time.format('%d %B %Y');\n\t\n\tmodule.exports = config;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _xAxis = __webpack_require__(14);\n\t\n\tvar _xAxis2 = _interopRequireDefault(_xAxis);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar boolOrReturnValue = function boolOrReturnValue(x, data) {\n\t    return typeof x === 'function' ? x(data) : x;\n\t};\n\t\n\texports.default = function (axesContainer, scales, configuration, dimensions) {\n\t    return function (data) {\n\t        var axis = function axis(orientation) {\n\t            var selection = axesContainer.selectAll('.x-axis.' + orientation).data([{}]);\n\t\n\t            selection.enter().append('g').classed('x-axis', true).classed(orientation, true).call((0, _xAxis2.default)(scales.x, configuration, orientation)).attr('transform', 'translate(0,' + (orientation === 'bottom' ? dimensions.height : 0) + ')');\n\t\n\t            selection.call((0, _xAxis2.default)(scales.x, configuration, orientation));\n\t\n\t            selection.exit().remove();\n\t        };\n\t\n\t        if (boolOrReturnValue(configuration.hasTopAxis, data)) {\n\t            axis('top');\n\t        }\n\t\n\t        if (boolOrReturnValue(configuration.hasBottomAxis, data)) {\n\t            axis('bottom');\n\t        }\n\t    };\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar delimiters = exports.delimiters = function delimiters(svg, scales, x, dateFormat) {\n\t    var extremum = svg.select('.extremum');\n\t\n\t    extremum.selectAll('.minimum').remove();\n\t    extremum.selectAll('.maximum').remove();\n\t\n\t    var domain = scales.x.domain();\n\t    extremum.append('text').text(dateFormat(domain[0])).classed('minimum', true);\n\t\n\t    extremum.append('text').text(dateFormat(domain[1])).classed('maximum', true).attr('transform', 'translate(' + (scales.x.range()[1] - x) + ')').attr('text-anchor', 'end');\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (svg, scales, configuration) {\n\t    return function dropsSelector(data) {\n\t        var dropLines = svg.selectAll('.drop-line').data(data);\n\t\n\t        dropLines.enter().append('g').classed('drop-line', true).attr('transform', function (d, idx) {\n\t            return 'translate(10, ' + scales.y(idx) + ')';\n\t        }).attr('fill', configuration.eventLineColor);\n\t\n\t        dropLines.each(function dropLineDraw(drop) {\n\t            var drops = d3.select(this).selectAll('.drop').data(drop.data);\n\t\n\t            drops.attr('cx', function (d) {\n\t                return scales.x(configuration.date(d));\n\t            });\n\t\n\t            var circle = drops.enter().append('circle').classed('drop', true).attr('r', 5).attr('cx', function (d) {\n\t                return scales.x(configuration.date(d));\n\t            }).attr('cy', configuration.lineHeight / 2).attr('fill', configuration.eventColor);\n\t\n\t            circle.on('click', configuration.click);\n\t            circle.on('mouseover', configuration.mouseover);\n\t\n\t            circle.on('mouseout', configuration.mouseout);\n\t\n\t            // unregister previous event handlers to prevent from memory leaks\n\t            drops.exit().on('click', null).on('mouseout', null).on('mouseover', null).remove();\n\t        });\n\t\n\t        dropLines.exit().remove();\n\t    };\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _delimiters = __webpack_require__(6);\n\t\n\tvar _metaballs = __webpack_require__(13);\n\t\n\tvar _axes = __webpack_require__(5);\n\t\n\tvar _axes2 = _interopRequireDefault(_axes);\n\t\n\tvar _drops = __webpack_require__(7);\n\t\n\tvar _drops2 = _interopRequireDefault(_drops);\n\t\n\tvar _labels = __webpack_require__(9);\n\t\n\tvar _labels2 = _interopRequireDefault(_labels);\n\t\n\tvar _lineSeparator = __webpack_require__(10);\n\t\n\tvar _lineSeparator2 = _interopRequireDefault(_lineSeparator);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (svg, dimensions, scales, configuration) {\n\t    var defs = svg.append('defs');\n\t\n\t    defs.append('clipPath').attr('id', 'drops-container-clipper').append('rect').attr('id', 'drops-container-rect').attr('width', dimensions.width).attr('height', dimensions.height + configuration.margin.top + configuration.margin.bottom);\n\t\n\t    var labelsContainer = svg.append('g').classed('labels', true).attr('transform', 'translate(0, ' + configuration.lineHeight + ')');\n\t\n\t    var chartContainer = svg.append('g').attr({\n\t        class: 'chart-wrapper',\n\t        transform: 'translate(' + (configuration.labelsWidth + configuration.labelsRightMargin) + ', 55)'\n\t    });\n\t\n\t    var axesContainer = chartContainer.append('g').classed('axes', true);\n\t\n\t    var dropsContainer = chartContainer.append('g').classed('drops-container', true).attr('clip-path', 'url(#drops-container-clipper)').style('filter', 'url(#metaballs)');\n\t\n\t    chartContainer.append('g').classed('extremum', true).attr('width', dimensions.width).attr('height', 30).attr('transform', 'translate(0, -35)');\n\t\n\t    if (configuration.metaballs) {\n\t        (0, _metaballs.metaballs)(defs);\n\t    }\n\t\n\t    var lineSeparator = (0, _lineSeparator2.default)(axesContainer, scales, configuration, dimensions);\n\t    var axes = (0, _axes2.default)(axesContainer, scales, configuration, dimensions);\n\t    var labels = (0, _labels2.default)(labelsContainer, scales, configuration);\n\t    var drops = (0, _drops2.default)(dropsContainer, scales, configuration);\n\t\n\t    return function (data) {\n\t        lineSeparator(data);\n\t        (0, _delimiters.delimiters)(svg, scales, configuration.labelsWidth + configuration.labelsRightMargin, configuration.dateFormat);\n\t        drops(data);\n\t        labels(data, configuration);\n\t        axes(data);\n\t    };\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _filterData = __webpack_require__(12);\n\t\n\tvar _filterData2 = _interopRequireDefault(_filterData);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (container, scales, config) {\n\t    return function (data) {\n\t        var labels = container.selectAll('.label').data(data);\n\t\n\t        var text = function text(d) {\n\t            var count = (0, _filterData2.default)(d.data, scales.x, config.date).length;\n\t            return d.name + (count > 0 ? ' (' + count + ')' : '');\n\t        };\n\t\n\t        labels.text(text);\n\t\n\t        labels.enter().append('text').classed('label', true).attr('x', config.labelsWidth).attr('transform', function (d, idx) {\n\t            return 'translate(0, ' + (40 + scales.y(idx)) + ')';\n\t        }).attr('text-anchor', 'end').text(text);\n\t\n\t        labels.exit().remove();\n\t    };\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (axesContainer, scales, configuration, dimensions) {\n\t    return function (data) {\n\t        var separators = axesContainer.selectAll('.line-separator').data(data);\n\t\n\t        separators.enter().append('g').classed('line-separator', true).attr('transform', function (d, i) {\n\t            return 'translate(0, ' + (scales.y(i) + configuration.lineHeight) + ')';\n\t        }).append('line').attr('x1', 0).attr('x2', dimensions.width);\n\t\n\t        separators.exit().remove();\n\t    };\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _configurable = __webpack_require__(16);\n\t\n\tvar _configurable2 = _interopRequireDefault(_configurable);\n\t\n\tvar _config = __webpack_require__(4);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _drawer = __webpack_require__(8);\n\t\n\tvar _drawer2 = _interopRequireDefault(_drawer);\n\t\n\tvar _zoom = __webpack_require__(15);\n\t\n\tvar _zoom2 = _interopRequireDefault(_zoom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction eventDrops() {\n\t    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    var finalConfiguration = _extends({}, _config2.default, config);\n\t\n\t    var yScale = function yScale(data) {\n\t        var scale = _d2.default.scale.ordinal();\n\t\n\t        return scale.domain(data.map(function (d) {\n\t            return d.name;\n\t        })).range(data.map(function (d, i) {\n\t            return i * finalConfiguration.lineHeight;\n\t        }));\n\t    };\n\t\n\t    var xScale = function xScale(width, timeBounds) {\n\t        return _d2.default.time.scale().range([0, width]).domain(timeBounds);\n\t    };\n\t\n\t    function eventDropGraph(selection) {\n\t        return selection.each(function selector(data) {\n\t            _d2.default.select(this).select('.event-drops-chart').remove();\n\t\n\t            var dimensions = {\n\t                width: this.clientWidth,\n\t                height: data.length * finalConfiguration.lineHeight\n\t            };\n\t\n\t            var scales = {\n\t                x: xScale(dimensions.width, [finalConfiguration.start, finalConfiguration.end]),\n\t                y: yScale(data)\n\t            };\n\t\n\t            var svg = _d2.default.select(this).append('svg').classed('event-drops-chart', true).attr({\n\t                width: dimensions.width,\n\t                height: dimensions.height + finalConfiguration.margin.top + finalConfiguration.margin.bottom\n\t            });\n\t\n\t            var draw = (0, _drawer2.default)(svg, dimensions, scales, finalConfiguration).bind(selection);\n\t            draw(data);\n\t\n\t            if (finalConfiguration.zoomable) {\n\t                this.zoom = (0, _zoom2.default)(_d2.default.select(this), dimensions, scales, finalConfiguration, data, draw);\n\t            }\n\t        });\n\t    }\n\t\n\t    (0, _configurable2.default)(eventDropGraph, finalConfiguration);\n\t\n\t    return eventDropGraph;\n\t}\n\t\n\t_d2.default.chart = _d2.default.chart || {};\n\t_d2.default.chart.eventDrops = eventDrops;\n\t\n\tmodule.exports = eventDrops;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = filterData;\n\tfunction filterData() {\n\t    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var scale = arguments[1];\n\t    var date = arguments[2];\n\t\n\t    var _scale$domain = scale.domain();\n\t\n\t    var _scale$domain2 = _slicedToArray(_scale$domain, 2);\n\t\n\t    var min = _scale$domain2[0];\n\t    var max = _scale$domain2[1];\n\t\n\t    return data.filter(function (d) {\n\t        return date(d) >= min && date(d) <= max;\n\t    });\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar metaballs = exports.metaballs = function metaballs(defs) {\n\t    var filters = defs.append('filter');\n\t\n\t    filters.attr('id', 'metaballs');\n\t\n\t    filters.append('feGaussianBlur').attr('in', 'SourceGraphic').attr('stdDeviation', 10).attr('result', 'blur');\n\t\n\t    filters.append('feColorMatrix').attr('in', 'blur').attr('mode', 'matrix').attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10').attr('result', 'contrast');\n\t\n\t    filters.append('feBlend').attr('in', 'SourceGraphic').attr('in2', 'contrast');\n\t\n\t    return filters;\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (xScale, configuration, where) {\n\t    var tickFormatData = configuration.tickFormat.map(function (t) {\n\t        return t.slice(0);\n\t    });\n\t    var tickFormat = configuration.locale ? configuration.locale.timeFormat.multi(tickFormatData) : _d2.default.time.format.multi(tickFormatData);\n\t\n\t    var axis = _d2.default.svg.axis().scale(xScale).orient(where).tickFormat(tickFormat);\n\t\n\t    if (typeof configuration.axisFormat === 'function') {\n\t        configuration.axisFormat(axis);\n\t    }\n\t\n\t    return axis;\n\t};\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (container, dimensions, scales, configuration, data, callback) {\n\t    var zoom = _d2.default.behavior.zoom().size([dimensions.width, dimensions.height]).scaleExtent([configuration.minScale, configuration.maxScale]).x(scales.x).on('zoom', function () {\n\t        requestAnimationFrame(function () {\n\t            return callback(data);\n\t        });\n\t    });\n\t\n\t    zoom.on('zoomend', configuration.zoomend);\n\t    container.call(zoom);\n\t    return zoom;\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction configurable(targetFunction, config) {\n\t\n\t    function configure(item) {\n\t        return function(value) {\n\t            if (!arguments.length) return config[item];\n\t            config[item] = value;\n\t\n\t            return targetFunction;\n\t        };\n\t    }\n\t\n\t    for (var item in config) {\n\t        targetFunction[item] = configure(item);\n\t    }\n\t}\n\t\n\tif(true) {\n\t    module.exports = configurable;\n\t} else if ('function' == typeof define && define.amd) {\n\t    define([], configurable);\n\t} else {\n\t    window.configurable = configurable;\n\t}\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".zoom-area{fill:transparent;cursor:pointer}.line-separator,.x-axis,.y-tick{stroke:#000;fill:none;stroke-width:1px}.line-separator:last-child{display:none}.x-axis{position:absolute;z-index:50}text{stroke:none;fill:#000}.graph-body .line{height:20px;padding:10px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".drop{cursor:pointer}.tooltip{padding:.5rem 1rem;width:30rem;line-height:1.4rem}.tooltip,.tooltip:before{position:absolute;background:#fff;border:2px solid #a5a5a5}.tooltip:before{content:'';display:block;top:-.65rem;width:1rem;height:1rem;border-width:2px 0 0 2px;transform:rotate(45deg);z-index:1}.tooltip.left:before{left:1.65rem}.tooltip.right:before{right:1.65rem}.timeline-title{text-align:center;font-weight:700;margin-bottom:0}.zoom-btn{float:right;height:2em;width:2em;font-weight:700;background:#fff;border:1px solid #d3d3d3;margin-left:4px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(17);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(18);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js!./styles.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js!./styles.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** ../public/eidr-connect-post-enhancer.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 81f00f6d2568d0dd1864\n **/","import 'd3';\nimport './EventDrops/lib/eventDrops.js';\nimport './EventDrops/style.css';\nimport './styles.css';\nconst EIDR_CONNECT_URL = \"https://eidr-connect.eha.io\";\n\nconst FONT_SIZE = 16; // in pixels\nconst TOOLTIP_WIDTH = 30; // in rem\nconst showTooltip = (article)=> {\n  d3.select('body').selectAll('.tooltip').remove();\n\n  const tooltip = d3.select('body')\n  .append('div')\n  .attr('class', 'tooltip')\n  .style('opacity', 0); // hide it by default\n\n  // show the tooltip with a small animation\n  tooltip.transition()\n  .duration(200)\n  .each('start', function start(){\n    d3.select(this).style('block');\n  })\n  .style('opacity', 1);\n\n  const rightOrLeftLimit = FONT_SIZE * TOOLTIP_WIDTH;\n  const direction = d3.event.pageX > rightOrLeftLimit ? 'right' : 'left';\n\n  const ARROW_MARGIN = 1.65;\n  const ARROW_WIDTH = FONT_SIZE;\n  const left = direction === 'right' ?\n    d3.event.pageX - rightOrLeftLimit :\n    d3.event.pageX - ARROW_MARGIN * FONT_SIZE - ARROW_WIDTH / 2;\n\n  tooltip.html(`\n    <div class=\"marker\">\n      <div class=\"content\">\n        <p>\n          <a href=\"${article.url}\" class=\"author\">${article.url}</a>\n        </p>\n        <p>\n          Published on <span class=\"date\">${(new Date(article.publishDate)).toLocaleString()}</span>\n        </p>\n      </div>\n    </div>\n  `)\n  .classed(direction, true)\n  .style({\n    left: `${left}px`,\n    top: (d3.event.pageY + 16) + 'px',\n  });\n};\n\nconst hideTooltip = () => {\n  d3.select('.tooltip').transition()\n  .duration(200)\n  .each('end', function end(){\n    this.remove();\n  })\n  .style('opacity', 0);\n};\n\nconst pointAdd = (point0, ...points) => point0.map((el, idx)=>{\n    return points.reduce((sofar, el2)=>sofar+el2[idx], el);\n  });\nconst pointScale = (p, s) => p.map((el, idx)=>{\n    return el * s;\n  });\n\nvar enhancing = false;\nif(window.obs) window.obs.disconnect();\nconst enhance = ()=>{\n  if(enhancing) return;\n  enhancing  = true;\n  let target = document.querySelector(\"#preview\");\n  let printLink = document.querySelector(\".printable a\");\n  if(!printLink) return enhancing=false;\n  let postIdMatch = document.querySelector(\".printable a\").onclick.toString().match(/post\\/(\\d+)/);\n  if(!postIdMatch) return enhancing=false;\n  let postId = window.__debugPostId || postIdMatch[1];\n  let url = \"http://promedmail.org/post/\" + postId;\n  let eidrConnectUrl = window.__debugEidrConnectUrl || EIDR_CONNECT_URL;\n  $.getJSON(eidrConnectUrl + \"/api/events-with-source\", {\n    url: url\n  }, (events)=>{\n    if(!events || events.length === 0) return enhancing=false;\n    let enhancementHTML = `\n      <p>EIDR-Connect Events:&nbsp;\n        ${events.map((event)=>{\n          return `<a href=\"https://eidr-connect.eha.io/user-event/${event._id}\">\n            ${event.eventName}\n          </a>`;\n        }).join(\", \")}\n      </p>\n      <div id=\"plotContainer\">\n        <button class=\"zoom-btn zoom-out\">-</button>\n        <button class=\"zoom-btn zoom-in\">+</button>\n        <p class=\"timeline-title\">Event timeline:</p>\n        <div class=\"eidr-chart\"></div>\n      </div>\n    `;\n    let $seeAlso = $(target).find(\"h2\");\n    if($seeAlso.length > 0) $seeAlso.before(enhancementHTML);\n    else $(target).append(enhancementHTML);\n    var minPubDate = new Date();\n    events.forEach((event)=>{\n      event.articles.forEach((article)=>{\n        if(!article.publishDate) return;\n        let publishDate = new Date(article.publishDate);\n        if(publishDate < minPubDate){\n          minPubDate = publishDate;\n        }\n      });\n    });\n    const chart = d3.chart.eventDrops()\n    //Start a day before the first date\n    .start(new Date(minPubDate.getTime() - 3600000 * 24))\n    .end(new Date(Date.now() + 3600000 * 24))\n    .margin({\n      top: 50, bottom: 0, left: 0, right: 0\n    })\n    .labelsWidth(0)\n    .eventColor((d, i)=>{\n      return d.url === url ? '#ff0000' : '#0d73bb';\n    })\n    .date(a => new Date(a.publishDate))\n    .click(showTooltip);\n    \n    $(document).click((evt)=>{\n      if(evt.target.matches(\".drop\")) return;\n      if(!$(evt.target).closest('.tooltip').length) hideTooltip();\n    });\n\n    const element = d3.select('.eidr-chart').datum(events.map((event)=>({\n      name: event.eventName,\n      data: event.articles.filter(a=>a.publishDate)\n    })));\n\n    chart(element);\n\n    const zoom = element[0][0].zoom;\n    $(\".zoom-in\").click(()=>zoomBy(1.5));\n    $(\".zoom-out\").click(()=>zoomBy(1/1.5));\n\n    let zoomBy = (factor) => {\n      // Temporarily set zoom center\n      zoom.center([$(\".eidr-chart\").width() / 2, 0]);\n      // Based on http://bl.ocks.org/mbostock/7ec977c95910dd026812\n      element.call(zoom.event);\n      let center0 = zoom.center();\n      let translate0 = zoom.translate();\n      let coordinates0 = pointScale(\n        pointAdd(center0,  pointScale(zoom.translate(), -1)),\n        1 / zoom.scale()\n      );\n      zoom.scale(zoom.scale() * factor);\n      let center1 = pointAdd(\n        zoom.translate(),\n        pointScale(coordinates0, zoom.scale())\n      );\n      zoom.translate(pointAdd(translate0, center0, pointScale(center1, -1)));\n      element.transition().duration(500).call(zoom.event);\n      zoom.center(null);\n    };\n    // A timeout is used for debouncing\n    setTimeout(()=>{\n      enhancing = false;\n    }, 100);\n  });\n};\nwindow.obs = new MutationObserver(enhance);\nwindow.obs.observe(document.body, { childList: true });\nenhance();\n\n\n\n/** WEBPACK FOOTER **\n ** ./app.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.3\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function(list) {\n      var i = list.length, array = new Array(i);\n      while (i--) array[i] = list[i];\n      return array;\n    };\n  }\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function() {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  function d3_behavior_dragTouchSubject() {\n    return d3.event.target;\n  }\n  function d3_behavior_dragMouseSubject() {\n    return d3_window;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      });\n      center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress();\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - point[0], dy = y - point[1], distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3_selectionRoot.transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 2\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tvar head = getHeadElement();\r\n\tstyleElement.type = \"text/css\";\r\n\thead.appendChild(styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement() {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tvar head = getHeadElement();\r\n\tlinkElement.rel = \"stylesheet\";\r\n\thead.appendChild(linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement();\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement();\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 3\n ** module chunks = 0\n **/","import d3 from 'd3';\n\nconst config = {\n    lineHeight: 40,\n    start: new Date(0),\n    end: new Date(),\n    minScale: 0,\n    maxScale: Infinity,\n    margin: {\n        top: 60,\n        left: 200,\n        bottom: 40,\n        right: 50,\n    },\n    labelsWidth: 210,\n    labelsRightMargin: 10,\n    locale: null,\n    axisFormat: null,\n    tickFormat: [\n        ['.%L', (d) => d.getMilliseconds()],\n        [':%S', (d) => d.getSeconds()],\n        ['%I:%M', (d) => d.getMinutes()],\n        ['%I %p', (d) => d.getHours()],\n        ['%a %d', (d) => d.getDay() && d.getDate() !== 1],\n        ['%b %d', (d) => d.getDate() !== 1],\n        ['%B', (d) => d.getMonth()],\n        ['%Y', () => true],\n    ],\n    mouseout: () => {},\n    mouseover: () => {},\n    zoomend: () => {},\n    click: () => {},\n    hasDelimiter: true,\n    date: d => d,\n    hasTopAxis: true,\n    hasBottomAxis: (d) => d.length >= 10,\n    eventLineColor: 'black',\n    eventColor: null,\n    metaballs: true,\n    zoomable: true,\n};\n\nconfig.dateFormat = config.locale ? config.locale.timeFormat('%d %B %Y') : d3.time.format('%d %B %Y');\n\nmodule.exports = config;\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/config.js\n **/","import xAxis from '../xAxis';\n\nconst boolOrReturnValue = (x, data) => typeof x === 'function' ? x(data) : x;\n\nexport default (axesContainer, scales, configuration, dimensions) => data => {\n    const axis = orientation => {\n        const selection = axesContainer.selectAll(`.x-axis.${orientation}`).data([{}]);\n\n        selection.enter()\n            .append('g')\n            .classed('x-axis', true)\n            .classed(orientation, true)\n            .call(xAxis(scales.x, configuration, orientation))\n            .attr('transform', `translate(0,${orientation === 'bottom' ? dimensions.height : 0})`);\n\n        selection.call(xAxis(scales.x, configuration, orientation));\n\n        selection.exit().remove();\n    };\n\n    if (boolOrReturnValue(configuration.hasTopAxis, data)) {\n        axis('top');\n    }\n\n    if (boolOrReturnValue(configuration.hasBottomAxis, data)) {\n        axis('bottom');\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/drawer/axes.js\n **/","export const delimiters = (svg, scales, x, dateFormat) => {\n    const extremum = svg.select('.extremum');\n\n    extremum.selectAll('.minimum').remove();\n    extremum.selectAll('.maximum').remove();\n\n    const domain = scales.x.domain();\n    extremum.append('text')\n        .text(dateFormat(domain[0]))\n        .classed('minimum', true);\n\n    extremum.append('text')\n        .text(dateFormat(domain[1]))\n        .classed('maximum', true)\n        .attr('transform', `translate(${scales.x.range()[1] - x})`)\n        .attr('text-anchor', 'end');\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/drawer/delimiters.js\n **/","export default (svg, scales, configuration) => function dropsSelector(data) {\n    const dropLines = svg.selectAll('.drop-line').data(data);\n\n    dropLines.enter()\n        .append('g')\n        .classed('drop-line', true)\n        .attr('transform', (d, idx) => `translate(10, ${scales.y(idx)})`)\n        .attr('fill', configuration.eventLineColor);\n\n    dropLines.each(function dropLineDraw(drop) {\n        const drops = d3.select(this).selectAll('.drop').data(drop.data);\n\n        drops.attr('cx', d => scales.x(configuration.date(d)));\n\n        const circle = drops.enter()\n            .append('circle')\n            .classed('drop', true)\n            .attr('r', 5)\n            .attr('cx', d => scales.x(configuration.date(d)))\n            .attr('cy', configuration.lineHeight / 2)\n            .attr('fill', configuration.eventColor);\n\n        circle.on('click', configuration.click);\n        circle.on('mouseover', configuration.mouseover);\n\n        circle.on('mouseout', configuration.mouseout);\n\n        // unregister previous event handlers to prevent from memory leaks\n        drops.exit()\n            .on('click', null)\n            .on('mouseout', null)\n            .on('mouseover', null)\n            .remove();\n    });\n\n    dropLines.exit().remove();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/drawer/drops.js\n **/","import { delimiters } from './delimiters';\nimport { metaballs } from '../metaballs';\nimport axesFactory from './axes';\nimport dropsFactory from './drops';\nimport labelsFactory from './labels';\nimport lineSeparatorFactory from './lineSeparator';\n\nexport default (svg, dimensions, scales, configuration) => {\n    const defs = svg.append('defs');\n\n    defs.append('clipPath')\n        .attr('id', 'drops-container-clipper')\n        .append('rect')\n            .attr('id', 'drops-container-rect')\n            .attr('width', dimensions.width)\n            .attr('height', dimensions.height + configuration.margin.top + configuration.margin.bottom);\n\n    const labelsContainer = svg\n        .append('g')\n        .classed('labels', true)\n        .attr('transform', `translate(0, ${configuration.lineHeight})`);\n\n    const chartContainer = svg.append('g')\n        .attr({\n            class: 'chart-wrapper',\n            transform: `translate(${configuration.labelsWidth + configuration.labelsRightMargin}, 55)`,\n        });\n\n    const axesContainer = chartContainer.append('g').classed('axes', true);\n\n    const dropsContainer = chartContainer.append('g')\n        .classed('drops-container', true)\n        .attr('clip-path', 'url(#drops-container-clipper)')\n        .style('filter', 'url(#metaballs)');\n\n    chartContainer.append('g')\n        .classed('extremum', true)\n        .attr('width', dimensions.width)\n        .attr('height', 30)\n        .attr('transform', `translate(0, -35)`);\n\n    if (configuration.metaballs) {\n        metaballs(defs);\n    }\n\n    const lineSeparator = lineSeparatorFactory(axesContainer, scales, configuration, dimensions);\n    const axes = axesFactory(axesContainer, scales, configuration, dimensions);\n    const labels = labelsFactory(labelsContainer, scales, configuration);\n    const drops = dropsFactory(dropsContainer, scales, configuration);\n\n    return data => {\n        lineSeparator(data);\n        delimiters(svg, scales, configuration.labelsWidth + configuration.labelsRightMargin, configuration.dateFormat);\n        drops(data);\n        labels(data, configuration);\n        axes(data);\n    };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/drawer/index.js\n **/","import filterData from '../filterData';\n\nexport default (container, scales, config) => data => {\n    const labels = container.selectAll('.label').data(data);\n\n    const text = d => {\n        const count = filterData(d.data, scales.x, config.date).length;\n        return d.name + (count > 0 ? ` (${count})` : '');\n    };\n\n    labels.text(text);\n\n    labels.enter()\n        .append('text')\n            .classed('label', true)\n            .attr('x', config.labelsWidth)\n            .attr('transform', (d, idx) => `translate(0, ${40 + scales.y(idx)})`)\n            .attr('text-anchor', 'end')\n            .text(text);\n\n    labels.exit().remove();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/drawer/labels.js\n **/","export default (axesContainer, scales, configuration, dimensions) => data => {\n    const separators = axesContainer.selectAll('.line-separator').data(data);\n\n    separators.enter()\n        .append('g')\n        .classed('line-separator', true)\n        .attr('transform', (d, i) => `translate(0, ${scales.y(i) + configuration.lineHeight})`)\n        .append('line')\n            .attr('x1', 0)\n            .attr('x2', dimensions.width);\n\n    separators.exit().remove();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/drawer/lineSeparator.js\n **/","import d3 from 'd3';\n\nimport configurable from 'configurable.js';\nimport defaultConfig from './config';\nimport drawer from './drawer';\nimport zoom from './zoom';\n\nfunction eventDrops(config = {}) {\n    const finalConfiguration = {...defaultConfig, ...config};\n\n    const yScale = (data) => {\n        const scale = d3.scale.ordinal();\n\n        return scale\n            .domain(data.map((d) => d.name))\n            .range(data.map((d, i) => i * finalConfiguration.lineHeight));\n    };\n\n    const xScale = (width, timeBounds) => {\n        return d3.time.scale()\n            .range([0, width])\n            .domain(timeBounds);\n    };\n\n    function eventDropGraph(selection) {\n        return selection.each(function selector(data) {\n            d3.select(this).select('.event-drops-chart').remove();\n\n            const dimensions = {\n                width: this.clientWidth,\n                height: data.length * finalConfiguration.lineHeight,\n            };\n\n            const scales = {\n                x: xScale(dimensions.width, [finalConfiguration.start, finalConfiguration.end]),\n                y: yScale(data),\n            };\n\n            const svg = d3.select(this).append('svg')\n                .classed('event-drops-chart', true)\n                .attr({\n                    width: dimensions.width,\n                    height: dimensions.height + finalConfiguration.margin.top + finalConfiguration.margin.bottom,\n                });\n\n            const draw = drawer(svg, dimensions, scales, finalConfiguration).bind(selection);\n            draw(data);\n\n            if (finalConfiguration.zoomable) {\n                this.zoom = zoom(d3.select(this), dimensions, scales, finalConfiguration, data, draw);\n            }\n        });\n    }\n\n    configurable(eventDropGraph, finalConfiguration);\n\n    return eventDropGraph;\n}\n\nd3.chart = d3.chart || {};\nd3.chart.eventDrops = eventDrops;\n\nmodule.exports = eventDrops;\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/eventDrops.js\n **/","export default function filterData(data = [], scale, date) {\n    const [min, max] = scale.domain();\n    return data.filter(d => date(d) >= min && date(d) <= max);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/filterData.js\n **/","export const metaballs = defs => {\n    const filters = defs.append('filter');\n\n    filters.attr('id', 'metaballs');\n\n    filters.append('feGaussianBlur')\n        .attr('in', 'SourceGraphic')\n        .attr('stdDeviation', 10)\n        .attr('result', 'blur');\n\n    filters.append('feColorMatrix')\n        .attr('in', 'blur')\n        .attr('mode', 'matrix')\n        .attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10')\n        .attr('result', 'contrast');\n\n    filters.append('feBlend')\n        .attr('in', 'SourceGraphic')\n        .attr('in2', 'contrast');\n\n    return filters;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/metaballs.js\n **/","import d3 from 'd3';\n\nexport default function(xScale, configuration, where) {\n    const tickFormatData = configuration.tickFormat.map(t => t.slice(0));\n    const tickFormat = configuration.locale ? configuration.locale.timeFormat.multi(tickFormatData) : d3.time.format.multi(tickFormatData);\n\n    const axis = d3.svg.axis()\n        .scale(xScale)\n        .orient(where)\n        .tickFormat(tickFormat);\n\n    if (typeof configuration.axisFormat === 'function') {\n        configuration.axisFormat(axis);\n    }\n\n    return axis;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/xAxis.js\n **/","import d3 from 'd3';\n\nexport default (container, dimensions, scales, configuration, data, callback) => {\n    const zoom = d3.behavior.zoom()\n        .size([dimensions.width, dimensions.height])\n        .scaleExtent([configuration.minScale, configuration.maxScale])\n        .x(scales.x)\n        .on('zoom', () => {\n            requestAnimationFrame(() => callback(data));\n        });\n\n    zoom.on('zoomend', configuration.zoomend);\n    container.call(zoom);\n    return zoom;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./EventDrops/lib/zoom.js\n **/","'use strict';\n\nfunction configurable(targetFunction, config) {\n\n    function configure(item) {\n        return function(value) {\n            if (!arguments.length) return config[item];\n            config[item] = value;\n\n            return targetFunction;\n        };\n    }\n\n    for (var item in config) {\n        targetFunction[item] = configure(item);\n    }\n}\n\nif('object' == typeof exports && 'undefined' != typeof module) {\n    module.exports = configurable;\n} else if ('function' == typeof define && define.amd) {\n    define([], configurable);\n} else {\n    window.configurable = configurable;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/configurable.js/configurable.js\n ** module id = 16\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".zoom-area{fill:transparent;cursor:pointer}.line-separator,.x-axis,.y-tick{stroke:#000;fill:none;stroke-width:1px}.line-separator:last-child{display:none}.x-axis{position:absolute;z-index:50}text{stroke:none;fill:#000}.graph-body .line{height:20px;padding:10px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./EventDrops/style.css\n ** module id = 17\n ** module chunks = 0\n **/","exports = module.exports = require(\"./node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".drop{cursor:pointer}.tooltip{padding:.5rem 1rem;width:30rem;line-height:1.4rem}.tooltip,.tooltip:before{position:absolute;background:#fff;border:2px solid #a5a5a5}.tooltip:before{content:'';display:block;top:-.65rem;width:1rem;height:1rem;border-width:2px 0 0 2px;transform:rotate(45deg);z-index:1}.tooltip.left:before{left:1.65rem}.tooltip.right:before{right:1.65rem}.timeline-title{text-align:center;font-weight:700;margin-bottom:0}.zoom-btn{float:right;height:2em;width:2em;font-weight:700;background:#fff;border:1px solid #d3d3d3;margin-left:4px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./styles.css\n ** module id = 18\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./EventDrops/style.css\n ** module id = 19\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./node_modules/css-loader/index.js!./styles.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js!./styles.css\", function() {\n\t\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js!./styles.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./styles.css\n ** module id = 20\n ** module chunks = 0\n **/"],"sourceRoot":""}